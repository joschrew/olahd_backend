# This workflow runs the tests, builds the image and starts the deploy-script for olahd-backend on the devserver

name: olahd CI/CD
on:
  push:
    branches:
      - 'main'
      - 'develop'
    tags:
      - 'refs/tags/v*'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: stop test-mongodb if running
      run: docker stop mongodb-test || true && docker rm mongodb-test || true
    - name: start test-mongodb
      run: docker run -v mongodb:/data-test/db -p 27018:27017 --name mongodb-test -e MONGO_INITDB_ROOT_USERNAME=test -e MONGO_INITDB_ROOT_PASSWORD=testtest -d mongo:4.0.10
    - name: stop test-es if running
      run: docker stop es-test || true && docker rm es -test || true
    - name: start test-es
      # test-es currently just neededs to be available without doing anything
      run: docker run --name es-test -p 9200:9200 -d docker.elastic.co/elasticsearch/elasticsearch:6.8.23
    - name: run tests
      run: mvn test

  # builds docker image to test if dockerfiles are working
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image with version
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  deploy-develop:
    name: Deploy to develop
    environment:
      name: Develop
    if: github.event.ref == 'refs/heads/develop'
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: copy key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/key
          chmod 600 ~/.ssh/key
        env:
          SSH_KEY: ${{ secrets.OLAHD_SSH_KEY }}
      - name: deploy to server
        run: ssh $SSH_USER@$SSH_HOST -o StrictHostKeyChecking=no -i ~/.ssh/key /home/$SSH_USER/start-olahd-docker.sh -b develop
        env:
          SSH_USER: ${{ secrets.OLAHD_SSH_USER }}
          SSH_HOST: ${{ secrets.OLAHD_SSH_HOST_DEV }}

  deploy-staging:
    name: Deploy to staging
    environment:
      name: Staging
    if: github.event.ref == 'refs/heads/main'
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: copy key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/key
          chmod 600 ~/.ssh/key
        env:
          SSH_KEY: ${{ secrets.OLAHD_SSH_KEY }}
      - name: deploy to server
        run: ssh $SSH_USER@$SSH_HOST -o StrictHostKeyChecking=no -i ~/.ssh/key /home/$SSH_USER/start-olahd-docker.sh
        env:
          SSH_USER: ${{ secrets.OLAHD_SSH_USER }}
          SSH_HOST: ${{ secrets.OLAHD_SSH_HOST_STAGE }}

  deploy-production:
    name: Deploy to production
    environment:
      name: Production
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: copy key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/key
          chmod 600 ~/.ssh/key
        env:
          SSH_KEY: ${{ secrets.OLAHD_SSH_KEY }}
      - name: deploy to server
        run: ssh $SSH_USER@$SSH_HOST -o StrictHostKeyChecking=no -i ~/.ssh/key /home/$SSH_USER/start-olahd-docker.sh
        env:
          SSH_USER: ${{ secrets.OLAHD_SSH_USER }}
          SSH_HOST: ${{ secrets.OLAHD_SSH_HOST_PROD }}
